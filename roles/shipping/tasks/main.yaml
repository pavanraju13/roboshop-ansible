- name: install  mysql
  ansible.builtin.dnf:
   name: maven
   state: present

- name: install  mysql
  ansible.builtin.dnf:
   name: mysql
   state: present
   
    
- name: install PyMySQL and cryptography 
  ansible.builtin.pip:
     name: "{{ item }}"
     executable: pip3.9
     loop:
      - cryptography
      - PyMySQL

- name: Downloading the {{ component }} code
  ansible.builtin.get_url:
    url: "{{ code }}"
    dest: "{{ tmp_folder }}"

- name: creating a {{ app_user }}
  ansible.builtin.user:
     name: "{{ app_user }}"


- name: deleting the application directory
  ansible.builtin.file:
    name: "{{ app_dir }}"
    state: absent


- name: creating the directory
  ansible.builtin.file:
    name: "{{ app_dir }}"
    state: directory

- name: Extracting the {{ component }} code
  ansible.builtin.unarchive:
     src: "{{ tmp_folder }}"
     dest: "{{ app_dir }}"
     remote_src: yes

- name: mvn install dependencies
  ansible.builtin.shell: mvn clean package
  args:
    chdir: "{{ app_dir }}"

- name: rename jar file
  ansible.builtin.command: mv target/shipping-1.0.jar shipping.jar
  args:
      chdir: /app

- name: copy shipping service
  ansible.builtin.copy:
      src: shipping.service
      dest: "{{ system_path }}"

- name: daemon reload
  ansible.builtin.systemd_service:
      daemon_reload: true

- name: enable and start shipping
  ansible.builtin.service:
      name: shipping
      state: started
      enabled: yes

  # - name: connect to mysql using app user
  #   community.mysql.mysql_info:
  #     login_user: shipping
  #     login_password: RoboShop@1
  #     login_host: mysql.daws84s.site
  #     login_db: cities

-  name: import data
   community.mysql.mysql_db:
      name: all
      login_user: root
      login_password: RoboShop@1
      login_host: mysql.dev.clouddevops.life
      state: import
      target: "{{ item }}"
      loop:
         - /app/db/schema.sql
         - /app/db/app-user.sql
         - /app/db/master-data.sql

- name: restart shipping
  ansible.builtin.service:
    state: restarted
    name: "{{ component }}"

